;INCLUDE Irvine32.inc

;.data
;.code
;main PROC
;	mov eax, 6		; copy 6 into eax
;	add eax, 10		; add 10 into eax and store result in eax
;	call writeint	; print value of eax register on colse

;	call readint	; Stoping Console from disappearning
;	exit
;main ENDP
;END main

;LAB 3(A)

;INCLUDE Irvine32.inc
;.data
;a dword ?
;b dword ?
;.code
;main PROC
;	call readint
;	mov a, eax
;	call readint
;	mov b, eax
;	mov eax, a
;	mov edx, 0
;	div b
;	call writeint
;	mov eax,edx
;	call writeint
	
;	call readint
;	exit
;main ENDP
;END main

;(B)

;INCLUDE Irvine32.inc
;.data
;string BYTE "HELLO WORLD",0

;.code
;main PROC
;	mov edx,offset string
;	call WriteString

;	call readint
;	exit
;main ENDP
;	END main

;PRACTICE:

;INCLUDE Irvine32.inc
;.data
;arrayW WORD 1000h,2000h,3000h
;arrayD DWORD 1,2,3,4
;.code
;    mov ax,[arrayW+2] ; AX = 2000h
;	mov ax,[arrayW+4] ; AX = 3000h
;	mov eax,[arrayD+4] ; EAX = 00000002h
;main PROC
;   mov ax,arrayW
;   call Dumpregs

;exit
;main ENDP
;END main


;LAB 4
;(A)

;INCLUDE Irvine32.inc
;.data
;data byte 10,20,30,40
;.code
;main PROC
;   mov eax,0
;   mov al,data
;   call WriteInt
;   mov al,data+1
;   call WriteInt
;   mov al,data+2
;   call WriteInt
;   mov al,data+3
;   call WriteInt
;   call readint

;exit
;main ENDP
;END main

;(B)

;INCLUDE Irvine32.inc
;.data
;data BYTE "abcd",0
;.code
;main PROC
;	mov eax,0
;	mov al,data
;	call WriteChar
;	mov al,data+1
;	call WriteChar
;	mov al,data+2
;	call WriteChar
;	mov al,data+3
;	call WriteChar
;	call readChar

;	exit
;main ENDP
;END main

;(C)

;INCLUDE Irvine32.inc
;.data
;data BYTE 1,2,3,4
;.code
;main PROC
;	mov eax, sizeof data
;	call WriteInt
;	call readint
;	exit
;main ENDP
;END main

;(D)

;INCLUDE Irvine32.inc
;.data
;data BYTE "abcd",0
;.code
;main PROC
;	mov eax,sizeof data
;	call Writeint
;	call readint
;	exit
;main ENDP
;END main

;(E)

;INCLUDE Irvine32.inc
;.data
;data byte 4 dup(?)
;.code
;main PROC
;	mov eax, sizeof data
;	call WriteInt
;	call readint
;	exit
;main ENDP
;END main

;SLIDE 4

;INCLUDE Irvine32.inc
;.data
;bVal BYTE ?
;wVal WORD ?
;dVal DWORD ?
;dVal2 DWORD ?
;.code
;main PROC
;	mov esi,OFFSET bVal
;	mov esi,OFFSET wVal
;	mov esi,OFFSET dVal
;	mov esi,OFFSET dVal2
;	call WriteInt
;	call readint
;	exit
;main ENDP
;END main

;INCLUDE Irvine32.inc
;.data
;A DWORD 1234567
;.code
;main PROC
;	mov al,BYTE PTR A
;	call writeint
;	mov ax,WORD PTR A
;	call writeint
;	call dumpregs
;	exit
;main ENDP
;END main

;INCLUDE Irvine32.inc
;.data
;varB BYTE 65h,31h,02h,05h
;varW WORD 6543h,1202h
;varD DWORD 12345678h
;.code
;main PROC
;	mov ax,WORD PTR[varB+2]
;	call dumpregs
;	mov bl,BYTE PTR varD
;	call dumpregs
;	mov bl,BYTE PTR[varW+2]
;	call dumpregs
;	mov ax,WORD PTR[varD+2]
;	call dumpregs
;	mov eax,DWORD PTR varW
;	call dumpregs
;	exit
;main ENDP
;END main